variables:
  TF_VAR_AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
  TF_VAR_AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
  TF_VAR_ssh_username: "$TEMPLATE_USERNAME"
  TF_VAR_ssh_private_key: "$SSH_PRIVATE_KEY"
  TF_VAR_CI_API_V4_URL: "$CI_API_V4_URL"
  TF_VAR_CI_COMMIT_SHORT_SHA: "$CI_COMMIT_SHORT_SHA"
  TF_VAR_GITLAB_TOKEN: "$GITLAB_TOKEN"

stages:
  - validate
  - plan
  - deploy

default:
  before_script:
    - mkdir -p /root/.ssh
    - echo $SSH_PRIVATE_KEY | base64 -d > /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa
    - echo $SSH_PUBLIC_KEY | base64 -d > /root/.ssh/id_rsa.pub && chmod 644 /root/.ssh/id_rsa.pub
    - ssh-keyscan gitlab.com > /root/.ssh/known_hosts && chmod 644 /root/.ssh/known_hosts

validate:
  stage: validate
  image:
    name: hashicorp/terraform:0.12.7
    entrypoint: [""]
  script:
    - cd src
    - terraform init -input=false
    - terraform validate
  artifacts:
    paths:
      - src/.terraform/

.plan_template: &plan
  stage: plan
  image:
    name: hashicorp/terraform:0.12.7
    entrypoint: [""]
  script:
    - apk add bash jq
    - cd src
    - terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
    - terraform plan -out docker-orchestration.plan
  artifacts:
    paths:
      - src/docker-orchestration.plan

development_plan:
  <<: *plan
  variables:
    WORKSPACE: "dev"
  only:
    - development

production_plan:
  <<: *plan
  variables:
    WORKSPACE: "prod"
  only:
    - production

.deploy_template: &deploy
  stage: deploy
  image:
    name: hashicorp/terraform:0.12.7
    entrypoint: [""]
  script:
    - apk add bash jq openssl
    - cd src
    - terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
    - terraform apply -auto-approve docker-orchestration.plan

development_deploy:
  <<: *deploy
  variables:
    WORKSPACE: "dev"
  only:
    - development

production_deploy:
  <<: *deploy
  variables:
    WORKSPACE: "prod"
  only:
    - production
